package com.modernjava.record;

import java.math.BigDecimal;
import java.util.Objects;

public record Product(String name,
                      BigDecimal cost,
                      String type) {

    //By default, the constructors that are generated by the compiler are called canonical constructor.
    public Product {
        System.out.println("Inside the validation block");
        if (name!=null && name.isBlank()) {
            throw new IllegalArgumentException("name value is not valid!");
        }

        if (cost.compareTo(BigDecimal.ZERO) <= 0) {
            throw new IllegalArgumentException("cost value is not valid!");
        }
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Product product)) return false;
        return Objects.equals(name, product.name) && Objects.equals(cost, product.cost) && Objects.equals(type, product.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, cost, type);
    }

    public Product(String name, BigDecimal cost) {

        this(name, cost, "GENERAL");
    }
}
